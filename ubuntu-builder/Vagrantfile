# -*- mode: ruby -*-
# vi: set ft=ruby :

# https://wiki.openafs.org/HowToBuildOpenAFSFromSource/

Vagrant.configure("2") do |config|
#  config.vm.box = "hashicorp/precise64"
  config.vm.box = "peru/ubuntu-desktop-amd64"
#  config.vm.box = "bento/ubuntu-16.04"
  config.vm.hostname = "openafs-ubuntu-builder"
  # config.vm.network "private_network", type: "dhcp"
 config.vm.synced_folder ".", "/vagrant" # without nfs
  # config.vm.synced_folder ".", "/vagrant", type: "nfs"
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  ["vmware_fusion", "vmware_workstation", "virtualbox", "libvirt", "kvm"].each do |provider|
    config.vm.provider provider do |v, override|
      host = RbConfig::CONFIG['host_os']
      v.memory = get_memory_setting(host)
      v.cpus = get_cpu_setting(host)
      v.uri = 'qemu+unix:///system'
    end
  end
  # config.vm.provision "shell", inline: $shell
  config.vm.provision "shell", path: "provision_script.sh"
end

# Use 1/divider of the available memory
# TODO: use 1/divider or 2 GB, whichever is larger
def get_memory_setting(host)
  divider = 4
  if host =~ /darwin/
    mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / divider
  elsif host =~ /linux/
    mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / divider
  else # Windows
    mem = `for /F "tokens=2 delims==" %i in ('wmic computersystem get TotalPhysicalMemory /value') do @echo %i`.to_i / 1024 / 1024 / divider
  end
  return mem
end

def get_cpu_setting(host)
  if host =~ /darwin/
    cpus = `sysctl -n hw.ncpu`.to_i
  elsif host =~ /linux/
    cpus = `nproc`.to_i
  else # Windows
    cpus = `for /F "tokens=2 delims==" %i in ('wmic cpu get NumberOfCores /value') do @echo %i`.to_i
  end
  return cpus
end
